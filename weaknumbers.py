#A=''.join(chr(41+sum(a%b==0 for b in range(1,a+1)))for a in range(1,1001))
#A=(sum(a%b==0 for b in range(1,a+1)for a in range(1,1001))
A=\
    '*++,+-+-,-+/+--.+/+/--+1,--/+1+/---2+--1+1+//-+3,/-/+1-1--+5+'+\
    '-/0-1+/-1+5+-//-1+3.-+5---1+5-/---5+//2+1+11-+5+1-3+1-//--9,-'+\
    '-/-5+1-1+5--11+1+5---8--//+5+1/1-5+--5-3+/1-+9,1//+1/3--+;+1-'+\
    '1-1-/11+7+-12+5+5---5--/3-9+/---9---5-1+52-+5+111+5-/-1+=+///'+\
    '/1-1-1+;--12+1-5/-+9-1-/+9+31-/5+-/9+1+/11-;,1-/+5-11--;---3-'+\
    '5+5-1+9+-5/+1-7-1-8/--1-9+//--=+/-5-5-11-+5+515+1-/1-+A,-/5-1'+\
    '+3/1-5+111-9+5--+91-//+9-5---;+-18+1-/31-9+1-/-5-5-1+A+-/1/1-'+\
    '/11+=+11/-1+921+5---7+;-/--19+-15+9+31-+;-1-1-1/5/-+A--12-5+1'+\
    '-5+5-153-1+5--+A-1//+9-31--5-1-9+5+/5--=,1/5-1-1--/A+--5-9+//'+\
    '5-9--1/+5-=1-+5--31+9+5-1/>+/-5-1-15-+;-1-3+91/-1+A+1///1+511'+\
    '-;+-19+1+51--=.-1/-A+1---5/1/9+1+511+=-51/+1-3/1+A+-1115-/-1-'+\
    'A+-52+1-9-1+;-1-3-9+/5--9---;+9-71--5+1/1-91/--+G-/-//5+901-5'+\
    '+-55-5+511+9--/5-9+3-1-A+-19+1-/5--;+9-/+5/11--A-118-1+/-1-A-'+\
    '-1/+9-;/--511-1+=+5-1-=--55+1+151+;+1-7/1-51-+I,--//5/3-5-5+1'+\
    '51+9+51-+A--/5-9-1/115+--=+;+51-+9-13/-1-91--D-111-1+//9+=--1'+\
    '/-9+9---A/-/5+9//--1A+1-5+1-391+5-5-9+5-/1--E,1//-9+511+;--53'+\
    '+1-;/-+9-115-A+5-1-5+-19'
B=[sum(a>A[i]for a in A[:i])for i in range(1000)]
solution=lambda n:[I:=max(_:=B[:n]),_.count(I)]

# def solution(x):
#     s=[*map(lambda v:-((q:=int(v**.5))*q==v)+2*len([*filter(lambda i:v%i<1, range(1,int(v**.5)+1))]),range(1,x+1))]
#     b=[sum(a>s[i]for a in s[:i])for i in range(x)]
#     return[I:=max(_:=b[:x]),_.count(I)]



#N=2000
#A=[sum(a%b==0 for b in range(1,a+1))for a in range(1,N+1)]
#B=[sum(a>A[i]for a in A[:i])for i in range(N)]
#solution=lambda n:[I:=max(_:=B[:n]),_.count(I)]

print(solution(1))
print(solution(2))
print(solution(3))
print(solution(4))
print(solution(5))
print(solution(6))
print(solution(7))
print(solution(8))
print(solution(9))
print(solution(10))
print(solution(1000))
